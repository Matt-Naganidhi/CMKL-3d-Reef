{"mappings":";;;;;;;;;;;;;AAIA,MAAM,gCAAU,SAAS,aAAa,CAAC;AACvC,MAAM,8BAAQ,8BAAQ,qBAAqB,GAAG,KAAK;AACnD,MAAM,+BAAS,8BAAQ,qBAAqB,GAAG,MAAM;AAErD,MAAM,iCAAW,IAAI,2BAAoB;IAAC,QAAQ;AAAO;AACzD,2CAA2C;AAC3C,+BAAS,aAAa,CAAC,OAAO,gBAAgB;AAC9C,+BAAS,OAAO,CAAC,6BAAO;AAExB,MAAM,8BAAQ,IAAI;AAClB,MAAM,+BAAS,IAAI,+BAAwB,IAAI,8BAAM,8BAAQ,KAAK;AAClE,6BAAO,QAAQ,CAAC,IAAI,CAAC;AAErB,2BAA2B;AAC3B,MAAM,iCAAW,IAAI,CAAA,GAAA,0DAAY,EAAE,8BAAQ,+BAAS,UAAU;AAQvD,SAAS,0CAAQ,QAAQ;IAC5B,MAAM,SAAS,IAAI,CAAA,GAAA,iDAAQ;IAC3B,OAAO,IAAI,CAAC,UAAU,CAAC;QACnB,MAAM,MAAM,IAAI,4BAAqB;YAAC,MAAM;YAAK,cAAc;QAAI;QACnE,MAAM,OAAO,IAAI,oBAAa,KAAK;QACnC,4BAAM,GAAG,CAAC;IACd;AACJ;AAEA,cAAc;AACd,SAAS;IACL,sBAAsB;IACtB,+BAAS,MAAM;IACf,+BAAS,MAAM,CAAC,6BAAO;AAC3B;AAEA","sources":["renderer.js"],"sourcesContent":["import * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { PLYLoader } from \"three/examples/jsm/loaders/PLYLoader\";\n\nconst display = document.querySelector(\"#display\");\nconst width = display.getBoundingClientRect().width;\nconst height = display.getBoundingClientRect().height;\n\nconst renderer = new THREE.WebGLRenderer({canvas: display});\n// Display size = whole window. Not dynamic\nrenderer.setPixelRatio(window.devicePixelRatio);\nrenderer.setSize(width, height);\n\nconst scene = new THREE.Scene();\nconst camera = new THREE.PerspectiveCamera(75, width/height, 0.1, 1000)\ncamera.position.setZ(5);\n\n// Camera movement controls\nconst controls = new OrbitControls(camera, renderer.domElement);\n\n// const point_light = new THREE.PointLight(0xffffff, 1000);\n// const ambient_light = new THREE.AmbientLight(0xffffff, 0.5);\n// point_light.position.set(5, 5, 5);\n// scene.add(point_light, ambient_light);\n\n// Load 3D construct file\nexport function loadPLY(filePath) {\n    const loader = new PLYLoader();\n    loader.load(filePath, (geo) => {\n        const mat = new THREE.PointsMaterial({size: 0.1, vertexColors: true});\n        const mesh = new THREE.Points(geo, mat);\n        scene.add(mesh);\n    });\n}\n\n// Update loop\nfunction animate() {\n    requestAnimationFrame(animate);\n    controls.update();\n    renderer.render(scene, camera);\n}\n\nanimate();"],"names":[],"version":3,"file":"server.js.map"}